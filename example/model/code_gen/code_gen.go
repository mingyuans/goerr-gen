// Code generated by "codegen"; DO NOT EDIT.

package code_gen

import code "github.com/mingyuans/goerr-gen/codegen"
import code_105 "github.com/mingyuans/goerr-gen/example/model/code"

// init register error codes defines in this source code to `github.com/mingyuans/errors`
func init() {
	code.Register(code_105.Success, 200, "OK")
	code.Register(code_105.ErrUnknown, 500, "Internal server error")
	code.Register(code_105.ErrBind, 400, "Error occurred while binding the request body to the struct")
	code.Register(code_105.ErrInvalidParams, 400, "Invalid parameter")
	code.Register(code_105.ErrValidation, 400, "Validation failed")
	code.Register(code_105.ErrTokenInvalid, 401, "Token invalid")
	code.Register(code_105.ErrPageNotFound, 404, "Page not found")
	code.Register(code_105.ErrTooManyRequests, 429, "You have exceeded the API call rate limit")
	code.Register(code_105.ErrDatabase, 500, "Database error")
	code.Register(code_105.ErrEncrypt, 401, "Error occurred while encrypting the user password")
	code.Register(code_105.ErrSignatureInvalid, 401, "Signature is invalid")
	code.Register(code_105.ErrExpired, 401, "Token expired")
	code.Register(code_105.ErrInvalidAuthHeader, 401, "Invalid authorization header")
	code.Register(code_105.ErrMissingHeader, 401, "The `Authorization` header was empty")
	code.Register(code_105.ErrPasswordIncorrect, 401, "Password was incorrect")
	code.Register(code_105.ErrPermissionDenied, 403, "Permission denied")
	code.Register(code_105.ErrEncodingFailed, 500, "Encoding failed due to an error with the data")
	code.Register(code_105.ErrDecodingFailed, 500, "Decoding failed due to an error with the data")
	code.Register(code_105.ErrInvalidJSON, 500, "Data is not valid JSON")
	code.Register(code_105.ErrEncodingJSON, 500, "JSON data could not be encoded")
	code.Register(code_105.ErrDecodingJSON, 500, "JSON data could not be decoded")
	code.Register(code_105.ErrInvalidYaml, 500, "Data is not valid Yaml")
	code.Register(code_105.ErrEncodingYaml, 500, "Yaml data could not be encoded")
	code.Register(code_105.ErrDecodingYaml, 500, "Yaml data could not be decoded")
	code.Register(code_105.ErrLockWithFailed, 429, "The resource that is being accessed is locked.Please wait for a moment and try again")
	code.Register(code_105.ErrSpannerUnknown, 500, "DB Unknown error")
	code.Register(code_105.ErrJobInvalid, 422, "Job is invalid")
	code.Register(code_105.ErrJobExists, 409, "Job already exists, please check your unique key")
	code.Register(code_105.ErrJobNotFound, 404, "Job not found")
	code.Register(code_105.ErrJobRedisUnknown, 500, "DB Unknown error")
	code.Register(code_105.ErrJobCancelIsNotAllowed, 403, "The current status is not allowed to be canceled")
	code.Register(code_105.ErrJobSQLBuilderUnknown, 500, "SQL Builder Unknown error")
	code.Register(code_105.ErrLockFailed, 500, "Lock Failed, please try again later")
	code.Register(code_105.ErrRetryingJobIsNotAllowed, 403, "The job is not allowed to be retried")
	code.Register(code_105.ErrRunningJobIsNotAllowed, 403, "The job is not allowed to be running")
	code.Register(code_105.ErrJobIsAlreadyRunning, 403, "The job is already running")
}
